% \iffalse meta-comment
% !TEX program = XeLaTeX
%
% DO NOT REMOVE THE MARK MANUALLY (used in l3build) -> %^^A [L3BUILD_REPLACED_MARK]
%
%<*internal>
\iffalse
%</internal>
%<*internal>
\fi
\begingroup
  \def\nameofLaTeXe{LaTeX2e}
\expandafter\endgroup\ifx\fmtname\nameofLaTeXe\else
\csname fi\endcsname
%</internal>
%<*install>
\input docstrip
\keepsilent
\askforoverwritefalse
\preamble

    Copyright (C) 2013-2014 by Xu Cheng <xucheng@me.com>
                  2014-     by hust-latex <https://github.com/hust-latex>

    This work may be distributed and/or modified under the
    conditions of the LaTeX Project Public License, either
    version 1.3c of this license or (at your option) any later
    version. This version of this license is in
       https://www.latex-project.org/lppl/lppl-1-3c.txt
    and the latest version of this license is in
       https://www.latex-project.org/lppl.txt
    and version 1.3c or later is part of all distributions of LaTeX
    version 2008 or later.

    This work has the LPPL maintenance status "maintained".

    The Current Maintainer of this work is HUANG Yuxi <hustthesis@hyxi.dev>.

\endpreamble
\postamble

    This work consists of the files \jobname.dtx
              and the derived files \jobname.ins,
                                    \jobname.cls,
                                    \jobname-doc.sty,
                                    \jobname-m.def,
                                    \jobname-d.def,
                                    \jobname.cbx,
                                    \jobname.bbx.

\endpostamble

\generate
  {
%</install>
%<*internal>
    \usedir{source/latex/\jobname}
    \file{\jobname.ins}{\from{\jobname.dtx}{install}}
%</internal>
%<*install>
    \usedir{tex/latex/\jobname}
    \file{\jobname.cls}{\from{\jobname.dtx}{class}}
    \file{\jobname-doc.sty}{\from{\jobname.dtx}{doc-sty}}
    \file{\jobname-m.def}{\from{\jobname.dtx}{def-m}}
    \file{\jobname-d.def}{\from{\jobname.dtx}{def-d}}
    \file{\jobname.cbx}{\from{\jobname.dtx}{cbx}}
    \file{\jobname.bbx}{\from{\jobname.dtx}{bbx}}
  }
\endbatchfile
%</install>
%<*internal>
\fi
%</internal>

%<class|doc-sty|def-m|def-d|cbx|bbx>\NeedsTeXFormat{LaTeX2e}
%<class>\ProvidesExplClass{hustthesis}
%<doc-sty>\ProvidesExplClass{hustthesis-doc}
%<def-m>\ProvidesExplFile{hustthesis-m.def}
%<def-d>\ProvidesExplFile{hustthesis-d.def}
%<cbx>\ProvidesFile{hustthesis.cbx}[Citation style for the hustthesis class]
%<bbx>\ProvidesFile{hustthesis.bbx}[Bibliography style for the hustthesis class]
%<class|doc-sty|def-m|def-d>  {[LATEST]}{[DEV]} %^^A [L3BUILD_REPLACED_MARK]
%<class>  {Thesis Template for Huazhong University of Science and Technology}
%<doc-sty>  {Documentation for the hustthesis class}
%<def-m>  {Definition file for the hustthesis class in master thesis}
%<def-d>  {Definition file for the hustthesis class in doctoral thesis}
%<*driver>
\documentclass{\jobname}
\usepackage{useclass}
% Protect \maketitile from the redefinition in \cls{article} in \cls{l3doc}.
\let\maketitleold=\maketitle
\useclass*[full]{l3doc}
\let\maketitle=\maketitleold
\usepackage{\jobname-doc}
\usepackage{mdframed}
\usepackage[backend=biber,style=hustthesis]{biblatex} % temporary
\begin{filecontents}[overwrite]{\jobname.bib}
@online{zeng2024fduthesis,
  title = {复旦大学论文模板},
  author = {曾, 祥东},
  year = {2017},
  month = feb,
  url = {https://github.com/stone-zeng/fduthesis},
}
\end{filecontents}
\addbibresource{\jobname.bib}

\providecommand{\name}{\jobname}
\providecommand{\clsname}{\cls{\name}}

\begin{document}
  \DocInput{\jobname.dtx}
  \PrintChanges
  \PrintIndex
\end{document}
%</driver>
% \fi
%
% \changes{v2.0}{2024/10/01}{应用 \LaTeX3 重构代码。}
% \title{The \clsname.cls Class}
% \author
%   {
%     Huang Yuxi^^A
%     \thanks{
%       \textit{Huang} is his surname.
%     }
%     <^^A
%     \href
%       {mailto:hustthesis@hyxi.dev}
%       {hustthesis@hyxi.dev}^^A
%     >
%   }
% \date{[LATEST] \quad Version [DEV]} ^^A [L3BUILD_REPLACED_MARK]
%
% \maketitle
%
% \tableofcontents
%
% \begin{documentation}
%
% \chapter{引言}
%
% 提前致谢 \cls{fduthesis} 的作者曾祥东，本模板的许多设计和实现都是参考了 \cls{fduthesis} 的代码\cite{zeng2024fduthesis}。
%
% \printbibliography
%
% \end{documentation}
%
% \begin{implementation}
%
% \newgeometry{
%   marginpar = 2.8 cm,
% }
%
% \chapter{\clsname{} 代码实现}
%
%    \begin{macrocode}
%<@@=hust>
%<*class>
%    \end{macrocode}
%
% \section{模板预处理}
%
% 载入 \LaTeX3 基础宏包。
%    \begin{macrocode}
\RequirePackage { xtemplate, l3keys2e }
%    \end{macrocode}
%
% \subsection{变量声明}
%
% \begin{variable}{
%   \l_@@_tmpa_box,
%   \l_@@_tmpa_clist,
%   \l_@@_tmpa_dim,
%   \l_@@_tmpa_skip,
%   \l_@@_tmpa_tl, \l_@@_tmpb_tl,
% }
% 临时变量。
%    \begin{macrocode}
\box_new:N \l_@@_tmpa_box
\clist_new:N \l_@@_tmpa_clist
\dim_new:N \l_@@_tmpa_dim
\skip_new:N \l_@@_tmpa_skip
\tl_new:N \l_@@_tmpa_tl
\tl_new:N \l_@@_tmpb_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\g_@@_thesis_type_tl}
% 论文类型。
%    \begin{macrocode}
\tl_new:N \g_@@_thesis_type_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\g_@@_to_ctexbook_clist, \g_@@_to_hyperref_clist}
% 分别保存由 \clsname{} 传入 \cls{ctexbook} 文档类和 \pkg{hyperref} 宏包的选项列表。
%    \begin{macrocode}
\clist_new:N \g_@@_to_ctexbook_clist
\clist_new:N \g_@@_to_hyperref_clist
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\g_@@_draft_bool}
% 草稿模式。
%    \begin{macrocode}
\bool_new:N \g_@@_draft_bool
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\g_@@_anonymous_bool}
% 盲审模式。
%    \begin{macrocode}
\bool_new:N \g_@@_anonymous_bool
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\g_@@_config_tl}
% 保存配置文件名称。默认为空。
%    \begin{macrocode}
\tl_new:N \g_@@_config_tl
%    \end{macrocode}
% \end{variable}
%
% \subsection{内部函数}
%
%
% \subsubsection{辅助函数}
% \begin{macro}{\@@_patch_cmd:Nnn, \@@_appto_cmd:Nn}
% 补丁工具，来自 \pkg{ctexpatch} 宏包。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_patch_cmd:Nnn #1#2#3
  {
    \ctex_patch_cmd_once:NnnnTF #1 { } {#2} {#3}
      { } { \ctex_patch_failure:N #1 }
  }
\cs_new_protected:Npn \@@_appto_cmd:Nn #1#2
  {
    \ctex_appto_cmd:NnnTF #1 { } {#2}
      { } { \ctex_patch_failure:N #1 }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_define_fn_style:nn,
%   \@@_define_punct:nn,
%   \@@_define_name:nn,
%   \@@_define_name:nnn}
% 用来定义脚注样式、标点、默认名称的辅助函数。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_define_fn_style:nn #1#2
  { \tl_const:cn { c_@@_fn_style_ #1 _tl } {#2} }
\cs_new_protected:Npn \@@_define_punct:nn #1#2
  { \tl_const:cn { c_@@_ #1 _tl } {#2} }
\cs_new_protected:Npn \@@_define_name:nn #1#2
  { \tl_const:cn { c_@@_name_ #1 _tl } {#2} }
\cs_new_protected:Npn \@@_define_name:nnn #1#2#3
  {
    \tl_const:cn { c_@@_name_ #1 _zh_tl } {#2}
    \tl_const:cn { c_@@_name_ #1 _en_tl } {#3}
  }
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\@@_msg_new:nn,
%   \@@_error:n, \@@_error:nn, \@@_error:nx, \@@_error:nnn, \@@_error:nnnn,
%   \@@_warning:n, \@@_warning:nn, \@@_warning:nxx,
%   \@@_info:nx
%}
% 各种信息函数的缩略形式。
%    \begin{macrocode}
\cs_new:Npn \@@_msg_new:nn { \msg_new:nnn { hustthesis } }
\cs_new:Npn \@@_error:n { \msg_error:nn { hustthesis } }
\cs_new:Npn \@@_error:nn { \msg_error:nnn { hustthesis } }
\cs_new:Npn \@@_error:nx { \msg_error:nnx { hustthesis } }
\cs_new:Npn \@@_error:nnn { \msg_error:nnnn { hustthesis } }
\cs_new:Npn \@@_error:nnnn { \msg_error:nnnnn { hustthesis } }
\cs_new:Npn \@@_warning:n { \msg_warning:nn { hustthesis } }
\cs_new:Npn \@@_warning:nn { \msg_warning:nnn { hustthesis } }
\cs_new:Npn \@@_warning:nxx { \msg_warning:nnxx { hustthesis } }
\cs_new:Npn \@@_info:nx { \msg_info:nnx { hustthesis } }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{\LaTeXe{} 封装}
%
% \begin{macro}{\@@_vspace:N, \@@_vspace:n, \@@_vspace:c}
% 类似 \LaTeXe{} 中的 \tn{vspace*}。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_vspace:N #1
  {
    \dim_set_eq:NN \l_@@_tmpa_dim \tex_prevdepth:D
    \tex_hrule:D height \c_zero_dim
    \nobreak
    \skip_vertical:N #1
    \skip_vertical:N \c_zero_skip
    \dim_set_eq:NN \tex_prevdepth:D \l_@@_tmpa_dim
  }
\cs_new_protected:Npn \@@_vspace:n #1
  {
    \skip_set:Nn \l_@@_tmpa_skip {#1}
    \@@_vspace:N \l_@@_tmpa_skip
  }
\cs_generate_variant:Nn \@@_vspace:N { c }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_line_spread:N, \@@_line_spread:n}
% 设置行距。
% \begin{arguments}
%   \item 行距倍数， |fp| 变量
% \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \@@_line_spread:N #1
  { \tex_linespread:D { \fp_use:N #1 } \tex_selectfont:D }
\cs_new:Npn \@@_line_spread:n #1
  { \tex_linespread:D {#1} \tex_selectfont:D }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_arabic:n}
% 等价于 \LaTeXe{} 中的 \tn{arabic}。
%    \begin{macrocode}
\cs_new:Npn \@@_arabic:n #1
  { \int_to_arabic:v { c@ #1 } }
%    \end{macrocode}
% \end{macro}
%
% \subsection{选项处理}
%
% 定义 | hust / option | 键值类，该键值类仅可在文档类选项中使用。
%    \begin{macrocode}
\keys_define:nn { hust / option }
  {
%    \end{macrocode}
%
% \begin{macro}[module=option]{type}
% 论文类型。目前分为硕士学位论文~\opt{master} 和博士学位论文~\opt{doctor}，默认为博士学位论文。
%    \begin{macrocode}
    type .choices:nn =
      { master, doctor }
      { \tl_set_eq:NN \g_@@_thesis_type_tl \l_keys_choice_tl },
    type .value_required:n = true,
    type .initial:n = { doctor },
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[module=option]{draft}
% 是否启用草稿模式。默认为 \opt{false}。
%    \begin{macrocode}
    draft .choice:,
    draft / true .code:n =
      {
        \bool_gset_true:N \g_@@_draft_bool
        \clist_gput_right:Nn \g_@@_to_ctexbook_clist { draft }
      },
    draft / false .code:n =
      {
        \bool_gset_false:N \g_@@_draft_bool
      },
    draft .default:n = { true },
    draft .initial:n = { false },
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[module=option]{anonymous}
% 是否启用盲审模式。默认为 \opt{false}，即显示作者信息。\key[option]{anonymous}
%    \begin{macrocode}
    anonymous .choice:,
    anonymous / true .code:n =
      {
        \bool_gset_true:N \g_@@_anonymous_bool
      },
    anonymous / false .code:n =
      {
        \bool_gset_false:N \g_@@_anonymous_bool
      },
    anonymous .default:n = { false },
    anonymous .initial:n = { false },
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[module=option]{config}
% 自定义配置文件名。
%    \begin{macrocode}
    config .tl_gset:N = \g_@@_config_tl,
%    \end{macrocode}
% \end{macro}
%
% 处理未知选项。
%    \begin{macrocode}
    unknown .code:n = { \@@_error:n { unknown-option } },
  }
\@@_msg_new:nn { unknown-option }
  { Class~ option~ "\l_keys_key_str"~ is~ unknown. }
%    \end{macrocode}
%
% \begin{macro}[module=option, int]{option}
% 将文档类选项传给 |hust / option|。
%    \begin{macrocode}
\ProcessKeysOptions { hust / option }
%    \end{macrocode}
% \end{macro}
%
% \subsection{参数载入}
%
% 载入参数配置文件。
%    \begin{macrocode}
\tl_if_empty:NTF \g_@@_config_tl
  {
    \tl_if_eq:NnT \g_@@_thesis_type_tl { master }
      { \file_input:n { hustthesis-m.def } }
    \tl_if_eq:NnT \g_@@_thesis_type_tl { doctor }
      { \file_input:n { hustthesis-d.def } }
  }
  {
    \@@_msg_new:nn { load-config-file }
      { You~ are~ loading~ config~ file~ "#1". }
    \@@_info:n { load-config-file }
    \file_input:V { \g_@@_config_tl }
  }
%    \end{macrocode}
%
% \subsection{宏包载入}
%
% 对不支持粗体斜体的字体进行兼容处理，仅限于 \XeTeX{} 引擎。参考自 \url{https://ask.latexstudio.net/ask/question/17464.html}。
%    \begin{macrocode}
\sys_if_engine_xetex:T
  {
    \PassOptionsToPackage { AutoFakeBold=3.0 } { xeCJK }
    \AddToHook { package / ctex / before }
      {
        \AddToHook { package / xeCJK / after }
          {
            \keys_define:nn { xeCJK / features }
              {
                BoldFont .code:n = ,
                ItalicFont .code:n =,
              }
          }
      }
    \AddToHook { package / ctex / after }
      {
        \keys_define:nn { xeCJK / features }
          {
            BoldFont .tl_set:N = \l__xeCJK_font_name_bf_tl ,
            ItalicFont .tl_set:N = \l__xeCJK_font_name_it_tl,
          }
      }
  }
%    \end{macrocode}
%
% 将选项传入 \cls{ctexbook} 文档类。
%    \begin{macrocode}
\PassOptionsToClass
  {
    UTF8,
    oneside,
    heading = true,
    zihao = -4,
    linespread = \c_@@_line_spread_fp,
    \g_@@_to_ctexbook_clist,
  }
  { ctexbook }
\LoadClass { ctexbook }
%    \end{macrocode}
%
% 其中 \pkg{utfsym} 宏包不依赖外部字体，使用 \TikZ{} 宏包绘制 |U+2610|:~☐，|U+2611|:~☑，|U+1F5F9|:~\usym{1F5F9} 等符号。
%    \begin{macrocode}
\RequirePackage
  {
    amsmath,
    geometry,
    fancyhdr,
    titletoc,
    graphicx,
    longtable,
    caption,
    xcolor,
    utfsym,
  }
%    \end{macrocode}
%
%
% \section{全局样式}
%
% \subsection{页面布局}
% 利用 \pkg{geometry} 宏包设置纸张大小、页面边距以及页眉高度。
%    \begin{macrocode}
\geometry
  {
    paper = a4paper,
    top = 4.5 cm,
    bottom = 2.8 cm,
    left = 2.8 cm,
    right = 2.8 cm,
    headheight = 30 pt,
  }
%    \end{macrocode}
%
% \subsection{字体设置}
%
% \subsection{页眉页脚}
%
% 清除默认页眉页脚格式。
%    \begin{macrocode}
\fancyhf {}
%    \end{macrocode}
%
% 设置页眉页脚颜色。
%    \begin{macrocode}
\providecolor { headfoot } { rgb } { 1, 0, 0 }
%    \end{macrocode}
%
% \begin{macro}{\@@_draw_hf_hline:n}
% 绘制页眉页脚横线。
% \begin{arguments}
%   \item 页眉页脚线的高度（粗细）
% \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Npn \@@_draw_hf_hline:n #1
  {
    { \color { headfoot } \tex_hrule:D height #1 }
  }
%    \end{macrocode}
% \end{macro}
%
% 设置页眉格式。仅在非盲审模式~\key{anonymous} 下显示学校名称。
%    \begin{macrocode}
\bool_if:NF \g_@@_anonymous_bool
  {
    \chead
      {
        \zihao{3} \ziju{0.7}
        \bfseries \kaishu
        \textcolor{ headfoot } { \c_@@_header_tl }
      }
  }
\renewcommand { \headrulewidth } { 1 pt }
\renewcommand { \headrule }
  {
    \@@_vspace:N { 6 pt }
    \@@_draw_hf_hline:n \headrulewidth
    \@@_vspace:n \headrulewidth
    \@@_draw_hf_hline:n \headrulewidth
  }
%    \end{macrocode}
%
% 设置页脚格式。
%    \begin{macrocode}
\cfoot { \zihao{-5} \thepage }
\renewcommand { \footrulewidth } { 0.5 pt }
\renewcommand { \footrule }
  {
    \@@_draw_hf_hline:n \footrulewidth
  }
%    \end{macrocode}
%
% \pkg{ctex} 宏包使用 |heading| 选项后，会把页面格式设置为 |headings|。
% 因此必须在 \pkg{ctex} 调用之后重新设置 \tn{pagestyle} 为 |fancy|。
%    \begin{macrocode}
\pagestyle { fancy }
%    \end{macrocode}
%
%
% \section{封面样式}
%
% \subsection{信息录入}
%
% \begin{variable}{
%   \l_@@_info_title_tl,
%   \l_@@_info_degree_tl,
%   \l_@@_info_author_tl,
%   \l_@@_info_major_tl,
%   \l_@@_info_supervisor_prop,
%   \l_@@_info_date_clist,
%   \l_@@_info_clc_tl,
%   \l_@@_info_student_id_tl,
%   \l_@@_info_school_id_tl,
%   \l_@@_info_secret_tl,
% }
% 声明中文封面信息。
%    \begin{macrocode}
\tl_new:N \l_@@_info_title_tl
\tl_new:N \l_@@_info_degree_tl
\tl_new:N \l_@@_info_author_tl
\tl_new:N \l_@@_info_major_tl
\prop_new:N \l_@@_info_supervisor_prop
\clist_new:N \l_@@_info_date_clist
\tl_new:N \l_@@_info_clc_tl
\tl_new:N \l_@@_info_student_id_tl
\tl_new:N \l_@@_info_school_id_tl
\tl_new:N \l_@@_info_secret_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{
%   \l_@@_info_title_en_tl,
%   \l_@@_info_author_en_tl,
%   \l_@@_info_major_en_tl,
%   \l_@@_info_supervisor_en_prop,
%   \l_@@_info_date_en_clist,
%   \l_@@_info_degree_en_tl,
% }
% 声明英文封面信息。
%    \begin{macrocode}
\tl_new:N \l_@@_info_title_en_tl
\tl_new:N \l_@@_info_author_en_tl
\tl_new:N \l_@@_info_major_en_tl
\prop_new:N \l_@@_info_supervisor_en_prop
\clist_new:N \l_@@_info_date_en_clist
\tl_new:N \l_@@_info_degree_en_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\l_@@_info_title_sanitized_tl,\l_@@_info_title_en_sanitized_tl}
% 处理后的论文标题。
%    \begin{macrocode}
\tl_new:N \l_@@_info_title_sanitized_tl
\tl_new:N \l_@@_info_title_en_sanitized_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}[do-not-index={\1, \2}]{\@@_set_title:nn}
% 设置论文标题，并删除其中的 |\\| 和汉字间的空格。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_set_title:nn #1#2
  {
    \tl_set:cn { l_@@_info_ #1 _tl } {#2}
    \tl_set:cn { l_@@_info_ #1 _sanitized_tl } {#2}
    \tl_replace_all:cnn { l_@@_info_ #1 _sanitized_tl } { \\ } { ~ }
    \regex_replace_all:nnc
      { \s+ } { \ }
      { l_@@_info_ #1 _sanitized_tl }
    \regex_replace_all:nnc
      { ([\x{4e00}-\x{9fff}]) \s+ ([\x{4e00}-\x{9fff}]) } { \1 \2 }
      { l_@@_info_ #1 _sanitized_tl }
  }
%    \end{macrocode}
% \end{macro}
%
% 定义 |hust/info| 键值类。
%    \begin{macrocode}
\keys_define:nn { hust / info }
  {
%    \end{macrocode}
%
% \begin{macro}[module=info]{info/title, info/title*}
% 论文题目。以下带星号的项目均表示相应的英文字段。
%    \begin{macrocode}
    title .code:n = { \@@_set_title:nn { title } {#1} },
    title* .code:n = { \@@_set_title:nn { title_en } {#1} },
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[module=info]{info/degree, info/degree*}
% 学位类型。中文类型~\key[info]{degree} 分为学术型~\opt{academic}，和专业型~\opt{professional}；英文类型~\key[info]{degree*} 包括文学~\opt{Arts}，理学~\opt{Science}，教育学~\opt{Education}，工学~\opt{Engineering}，法学~\opt{Laws}，医学~\opt{Medicine}，以及其他~\opt{XXX}。
%    \begin{macrocode}
    degree .choices:nn =
      { academic, professional }
      {
        \tl_set_eq:NN \l_@@_info_degree_tl \l_keys_choice_tl
      },
    degree .default:n = { academic },
    degree* .tl_set:N = \l_@@_info_degree_en_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[module=info]{info/author, info/author*}
% 学位申请人姓名。
  %    \begin{macrocode}
    author .tl_set:N = \l_@@_info_author_tl,
    author* .tl_set:N = \l_@@_info_author_en_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[module=info]{info/major, info/major*}
% 专业名称。
%    \begin{macrocode}
    major .tl_set:N = \l_@@_info_major_tl,
    major* .tl_set:N = \l_@@_info_major_en_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[module=info]{info/supervisor, info/supervisor*}
% 指导老师列表。
%    \begin{macrocode}
    supervisor .prop_gput:N = \l_@@_info_supervisor_prop,
    supervisor* .prop_gput:N = \l_@@_info_supervisor_en_prop,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[module=info]{info/date, info/date*}
% 论文提交日期。
%    \begin{macrocode}
    date .clist_set:N = \l_@@_info_date_clist,
    date* .clist_set:N = \l_@@_info_date_en_clist,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[module=info]{info/clc}
% 中图分类号。
%    \begin{macrocode}
    clc .tl_set:N = \l_@@_info_clc_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[module=info]{info/student-id, info/school-id}
% 学号和学校代码。
%    \begin{macrocode}
    student-id .tl_set:N = \l_@@_info_student_id_tl,
    school-id .tl_set:N = \l_@@_info_school_id_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[module=info]{info/secret}
% 密级。
%    \begin{macrocode}
    secret .tl_set:N = \l_@@_info_secret_tl,
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
  }
%    \end{macrocode}
%
% \subsubsection{定义内部函数}
%
% \begin{macro}{\@@_spread_box:nn, \@@_spread_box:no}
% 分散对齐的水平盒子。
% \begin{arguments}
%   \item 宽度
%   \item 内容
% \end{arguments}
% 利用 \cs{tl_map_inline:nn} 在字符间插入 \tn{hfil}；紧随其后的 \tn{unskip}
% 将会去掉最后一个 \tn{hfil}。见 \url{https://tex.stackexchange.com/q/169689}。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_spread_box:nn #1#2
  {
    \mode_leave_vertical:
    \hbox_to_wd:nn {#1} { \tl_map_inline:nn {#2} { ##1 \hfil } \unskip }
  }
\cs_generate_variant:Nn \@@_spread_box:nn { no }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_center_box:nn, \@@_center_box:Vn}
% 居中对齐的水平盒子。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_center_box:nn #1#2
  {
    \mode_leave_vertical:
    \hbox_to_wd:nn {#1} { \hfil #2 \hfil }
  }
\cs_generate_variant:Nn \@@_center_box:nn { Vn }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fixed_width_box:nn}
% 限宽盒子（允许换行）。
%    \begin{macrocode}
\cs_new:Npn \@@_fixed_width_box:nn #1#2
  { \parbox {#1} {#2} }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fixed_width_center_box:nn}
% 居中对齐的限宽盒子（允许换行）。
%    \begin{macrocode}
\cs_new:Npn \@@_fixed_width_center_box:nn #1#2
  { \parbox {#1} { \centering #2 } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_get_text_width:Nn, \@@_get_text_width:NV}
% 获取文本宽度，并存入 |dim| 型变量。
% \begin{arguments}
%   \item |dim| 型变量
%   \item 内容
% \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \@@_get_text_width:Nn #1#2
  {
    \hbox_set:Nn \l_@@_tmpa_box {#2}
    \dim_set:Nn #1 { \box_wd:N \l_@@_tmpa_box }
  }
\cs_generate_variant:Nn \@@_get_text_width:Nn { NV }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_blank_underline:n}
% 下划线占位符。|#1|: 长度。
%    \begin{macrocode}
\cs_new:Npn \@@_blank_underline:n #1
  { \rule [ -0.5 ex ] {#1} { 0.4 pt } }
%    \end{macrocode}
% \end{macro}
%
% \subsection{封面各部件}
%
% \begin{macro}{\@@_cover_logo:}
% 插入校名图片。根据参数 \opt{width} 和 \opt{height} 是否为空依次
% 判断。\cs{l_@@_cover_logo_size_clist} 中超过两个的参数将被忽略。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_cover_logo:
  {
    \includegraphics[scale=1.1]{hust-title.pdf}
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{封面模板}
%
% 声明封面对象。不需要带参数。
%    \begin{macrocode}
\DeclareObjectType { hust / cover } { \c_zero_int }
%    \end{macrocode}
%
% \begin{macro}[int]{\@@_declare_template:nn}
% 声明封面模板。
% \begin{arguments}
%   \item 模板名称
%   \item 封面部件列表，以逗号分隔
% \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Npn \@@_declare_template:nn #1#2
  {
    \tl_set:Nn \l_@@_template_tl {#1}
%    \end{macrocode}
% 构建模板接口。
%    \begin{macrocode}
    \@@_declare_template_interface:nx {#1}
      {
        format : tokenlist,
        top-skip : skip,
        bottom-skip : skip,
        \clist_map_function:nN {#2} \@@_key_type:n
      }
%    \end{macrocode}
% 声明所用变量。
%    \begin{macrocode}
    \tl_new:c { l_@@ / #1 / format_tl }
    \skip_new:c { l_@@ / #1 / top_skip }
    \skip_new:c { l_@@ / #1 / bottom_skip }
    \clist_map_inline:nn {#2}
      {
        \tl_new:c { l_@@ / #1 / ##1 / content_tl }
        \tl_new:c { l_@@ / #1 / ##1 / format_tl }
        \skip_new:c { l_@@ / #1 / ##1 / bottom_skip }
      }
%    \end{macrocode}
% 声明模板代码。
%    \begin{macrocode}
    \@@_declare_template_code:nxn {#1}
      {
        format = \exp_not:c { l_@@ / #1 / format_tl },
        top-skip = \use:c { l_@@ / #1 / top_skip },
        bottom-skip = \use:c { l_@@ / #1 / bottom_skip },
        \clist_map_function:nN {#2} \@@_key_binding:n
      }
      {
        \AssignTemplateKeys
        \tl_use:c { l_@@ / #1 / format_tl }
        \@@_vspace:c { l_@@ / #1 / top_skip }
        \clist_map_inline:nn {#2}
          {
            \use:c { @@ / #1 / ####1 / align:n }
              {
                \tl_use:c { l_@@ / #1 / ####1 / format_tl }
                \tl_use:c { l_@@ / #1 / ####1 / content_tl }
                \tex_par:D
              }
            \@@_vspace:c { l_@@ / #1 / ####1 / bottom_skip }
          }
        \@@_vspace:c { l_@@ / #1 / bottom_skip }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{variable}{\l_@@_template_tl}
% 保存模板名称。
%    \begin{macrocode}
\tl_new:N \l_@@_template_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{
%   \@@_declare_template_interface:nn,
%   \@@_declare_template_code:nnn,
%   \@@_declare_template_interface:nx,
%   \@@_declare_template_code:nxn
% }
% 为了展开的方便，这里需要封装 \pkg{xtemplate} 的一些函数。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_declare_template_interface:nn #1#2
  { \DeclareTemplateInterface { hust / cover } {#1} { \c_zero_int } {#2} }
\cs_new_protected:Npn \@@_declare_template_code:nnn #1#2#3
  { \DeclareTemplateCode { hust / cover } {#1} { \c_zero_int } {#2} {#3} }
\cs_generate_variant:Nn \@@_declare_template_interface:nn { nx }
\cs_generate_variant:Nn \@@_declare_template_code:nnn { nxn }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_key_type:n}
%    \begin{macrocode}
\cs_new:Npn \@@_key_type:n #1
  {
    #1 / content : tokenlist,
    #1 / format : tokenlist,
    #1 / bottom-skip : skip,
    #1 / align : choice { left, right, center, normal } = normal,
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_key_binding:n}
%    \begin{macrocode}
\cs_new:Npn \@@_key_binding:n #1
  {
    #1 / content =
      \exp_not:c
        { l_@@ / \l_@@_template_tl / #1 / content_tl },
    #1 / format =
      \exp_not:c
        { l_@@ / \l_@@_template_tl / #1 / format_tl },
    #1 / bottom-skip =
      \exp_not:c
        { l_@@ / \l_@@_template_tl / #1 / bottom_skip },
    #1 / align =
      {
        left =
          \exp_not:N \cs_set_protected:cpn
            { @@ / \l_@@_template_tl / #1 / align:n }
            \exp_not:n {##1}
            {
              \exp_not:n
                {
                  \group_begin:
                    \flushleft ##1 \endflushleft
                  \group_end:
                }
            },
        right =
          \exp_not:N \cs_set_protected:cpn
            { @@ / \l_@@_template_tl / #1 / align:n }
            \exp_not:n {##1}
            {
              \exp_not:n
                {
                  \group_begin:
                    \flushright ##1 \endflushright
                  \group_end:
                }
            },
        center =
          \exp_not:N \cs_set_protected:cpn
            { @@ / \l_@@_template_tl / #1 / align:n }
            \exp_not:n {##1}
            {
              \exp_not:n
                {
                  \group_begin:
                    \center ##1 \endcenter
                  \group_end:
                }
            },
        normal =
          \exp_not:N \cs_set_protected:cpn
            { @@ / \l_@@_template_tl / #1 / align:n }
            \exp_not:n {##1}
            { \exp_not:n { \group_begin: ##1 \group_end: } }
      },
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{绘制封面}
%
%    \begin{macrocode}
\DeclareDocumentCommand \maketitle { }
  {
    \makecoveri
  }
%    \end{macrocode}
%
% \subsubsection{中文封面（封一）}
%
% \begin{macro}{\makecoveri}
% 用户接口。
%    \begin{macrocode}
\NewDocumentCommand \makecoveri { }
  {
    \thispagestyle { empty }
    \tl_set:Nn \thepage { A }
    \UseInstance { hust / cover } { cover-i-default }
  }
\@@_declare_template:nn { cover-i }
  { logo }
\DeclareInstance { hust / cover } { cover-i-default } { cover-i }
  {
    logo / content =\@@_cover_logo:,
    logo / align = center,
  }
%    \end{macrocode}
% \end{macro}
%
%
%
% \section{扉页样式}
%
% \subsection{答辩委员会页}
%
% \subsection{声明页}
%
% \subsection{目录样式}
%
% \section{正文样式}
%
% \subsection{章节样式}
%
%    \begin{macrocode}
\keys_set:nn { ctex }
  {
%    \end{macrocode}
% 设置章（chapter）、节（section）与小节（sub-section）标题样式。

%    \begin{macrocode}
    chapter =
      {
        format = \zihao{3} \bfseries \rmfamily \centering,
        name = {},
        beforeskip = 15.5 bp,
        afterskip = 14 bp,
        number = \@@_arabic:n { chapter },
        pagestyle = fancy,
      },
    section =
      {
        format = \zihao{4} \bfseries \rmfamily \raggedright,
        numberformat = \rmfamily,
        beforeskip = 10 bp,
        afterskip = 7 bp,
      },
    subsection =
      {
        format = \zihao{-4} \bfseries \rmfamily \raggedright,
        numberformat = \rmfamily,
        beforeskip = 7 bp,
        afterskip = 4 bp,
      }
  }
%    \end{macrocode}
%
% \section{篇后样式}
%
% \subsection{致谢页}
%
% \subsection{参考文献}
%
% \section{附录样式}
%
% \subsection{答辩委员会决议}
%
% \subsection{成果论文对应关系}
%
% \subsection{中英文缩写对照表}
%
% \subsection{程序代码样式}
%
% \section{模板后处理}
%
% \section{用户接口}
%
% \begin{macro}[module=info]{info}
% \begin{macro}[module=style]{style}
% 定义元（meta）键值对。
%    \begin{macrocode}
\keys_define:nn { hust }
  {
    info .meta:nn = { hust / info } {#1},
    style .meta:nn = { hust / style } {#1}
  }
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% 文档类初始设置。学校代码默认为 \opt{10487}。
%    \begin{macrocode}
\keys_set:nn { hust }
  {
    info =
      {
        degree = { academic },
        secret = none,
        school-id = { 10487 },
        date = { \zhtoday },
        date* = { \month,~ \year },
      }
  }
%    \end{macrocode}
%
% \begin{macro}{\hustsetup}
% 用户设置接口。
%    \begin{macrocode}
\NewDocumentCommand \hustsetup { m }
  { \keys_set:nn { hust } {#1} }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%</class>
%    \end{macrocode}
%
% \section{模板参数}
%
%    \begin{macrocode}
%<*def-m|def-d>
%    \end{macrocode}
%
% \subsection{全局常量}
%
% \begin{variable}{\c_@@_name_school_zh_tl, \c_@@_name_school_en_tl}
% 学校名称。
%    \begin{macrocode}
\tl_const:Nn \c_@@_name_school_zh_tl { 华中科技大学 }
\tl_const:Nn \c_@@_name_school_en_tl { Huazhong~ University~ of~ Science~
  and~ Technology }
%    \end{macrocode}
% \end{variable}
%
% 常用标点符号，见表~\ref{tab:punctuations}，定义为 |\c_@@_ #1 _tl|。
%    \begin{macrocode}
\clist_map_inline:nn
  {
    { ideo_comma       } { ^^^^3001 },
    { ideo_full_stop   } { ^^^^3002 },
    { fwid_comma       } { ^^^^ff0c },
    { fwid_full_stop   } { ^^^^ff0e },
    { fwid_colon       } { ^^^^ff1a },
    { fwid_semicolon   } { ^^^^ff1b },
    { fwid_left_paren  } { ^^^^ff08 },
    { fwid_right_paren } { ^^^^ff09 }
  }
  { \@@_define_punct:nn #1 }
%    \end{macrocode}
%
% \begin{table}[ht]
%   \caption{常用标点符号}
%   \label{tab:punctuations}
%   \centering
%   \begin{tabular}{cccc}
%     \toprule
%       \textbf{中文名称} &
%       \textbf{英文名称} &
%       \textbf{符号} &
%       \textbf{Unicode 码位} \\
%     \midrule
%       中文顿号     & Ideographic comma           & ^^^^3001 & U+3001 \\
%       中文句号     & Ideographic full stop       & ^^^^3002 & U+3002 \\
%       中文逗号     & Fullwidth comma             & ^^^^ff0c & U+FF0C \\
%       全角西文句点 & Fullwidth full stop         & ^^^^ff0e & U+FF0E \\
%       中文冒号     & Fullwidth colon             & ^^^^ff1a & U+FF1A \\
%       中文分号     & Fullwidth semicolon         & ^^^^ff1b & U+FF1B \\
%       中文左圆括号 & Fullwidth left parenthesis  & ^^^^ff08 & U+FF08 \\
%       中文右圆括号 & Fullwidth right parenthesis & ^^^^ff09 & U+FF09 \\
%     \bottomrule
%   \end{tabular}
% \end{table}
%
% \begin{variable}{\c_@@_line_spread_fp}
% 设置行距倍数1.5倍。
%    \begin{macrocode}
\fp_const:Nn \c_@@_line_spread_fp { 1.5 }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\c_@@_emptybox_tl, \c_@@_checkbox_tl}
%    \begin{macrocode}
\tl_const:Nn \c_@@_emptybox_tl { ^^^^2610 }
\tl_const:Nn \c_@@_checkbox_tl { ^^^^2611 }
%    \end{macrocode}
% \end{variable}
%
% \subsection{封面页常量}
% \begin{variable}{
%   \c_@@_name_academic_tl,
%   \c_@@_name_professional_tl,
%   \c_@@_name_date_tl,
%   \c_@@_name_clc_tl,
%   \c_@@_name_student_id_tl,
%   \c_@@_name_school_id_tl,
%   \c_@@_name_secret_tl,
%   \c_@@_school_id_tl,
% }
% 中文封面页常量。
%    \begin{macrocode}
\clist_map_inline:nn
  {
    { academic } { 学术型 },
    { professional } { 专业型 },
    { date } { 答辩日期 },
    { clc } { 分类号 },
    { student_id } { 学号 },
    { school_id } { 学校代码 },
    { secret } { 密级 },
  }
  { \@@_define_name:nn #1 }
\tl_const:Nn \c_@@_school_id_tl { 10487 }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{
%   \c_@@_location_tl
% }
% 英文封面页常量。
%    \begin{macrocode}
\tl_const:Nn \c_@@_location_tl
  {
    Huazhong~ University~ of~ Science~ and~ Technology\\
    Wuhan~ 430074,~ P.~ R.~ China
  }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{
%   \c_@@_name_title_zh_tl,
%   \c_@@_name_title_en_tl,
%   \c_@@_name_author_zh_tl,
%   \c_@@_name_author_en_tl,
%   \c_@@_name_major_zh_tl,
%   \c_@@_name_major_en_tl,
%   \c_@@_name_supervisor_zh_tl,
%   \c_@@_name_supervisor_en_tl,
% }
% 中英文页共用常量。
%    \begin{macrocode}
\clist_map_inline:nn
  {
%<*def-m>
    { title } { A~ Dissertation~ Submitted~ in~ Partial~ Fulfillment~ of~
      the~ Requirements~ for~ } { 硕士学位论文 },
    { author } { Candidate } { 学位申请人 },
%</def-m>
%<*def-d>
    { title } { A~ Dissertation~ Submitted~ in~ Partial~ Fulfillment~ of~
      the~ Requirements~ for~ The~ Degree~ of~ Doctor~ of~ } { 博士学位论文 },
    { author } { Ph.D.~ Candidate } { 学位申请人 },
%</def-d>
    { major } { Major } { 专业 },
    { supervisor } { Supervisor } { 指导老师 },
  }
  { \@@_define_name:nnn #1 }
%    \end{macrocode}
% \end{variable}
%
% \subsection{声明页常量}
%
% \begin{variable}{\c_@@_orig_decl_title_tl, \c_@@_orig_decl_text_tl}
% 独创性声明。
%    \begin{macrocode}
\tl_const:Nn \c_@@_orig_decl_title_tl { 独创性声明 }
\tl_const:Nn \c_@@_orig_decl_text_tl
  {
    本人声明所呈交的学位论文是我个人在导师指导下进行的研究工作及取得的研
    究成果。尽我所知，除文中已经标明引用的内容外，本论文不包含任何其他个人或
    集体已经发表或撰写过的研究成果。对本文的研究做出贡献的个人和集体，均已在
    文中以明确方式标明。本人完全意识到本声明的法律结果由本人承担。
  }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\c_@@_orig_decl_sign_clist}
% 独创性声明签名项目。
%    \begin{macrocode}
\clist_const:Nn \c_@@_orig_decl_sign_clist
  {
    学位论文作者签名：,
    日期：\hspace{2em}年\hspace{1.5em}月\hspace{1.5em}日
  }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\c_@@_auth_decl_title_tl, \c_@@_auth_decl_text_tl}
% 学位论文版权使用授权书。
%    \begin{macrocode}
\tl_const:Nn \c_@@_auth_decl_title_tl { 学位论文版权使用授权书 }
\tl_const:Nn \c_@@_auth_decl_text_tl
  {
    本学位论文作者完全了解学校有关保留、使用学位论文的规定，即：学校有权
    保留并向国家有关部门或机构送交论文的复印件和电子版，允许论文被查阅和借阅。
    本人授权华中科技大学可以将本学位论文的全部或部分内容编入有关数据库进行检
    索，可以采用影印、缩印或扫描等复制手段保存和汇编本学位论文。
  }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\c_@@_auth_decl_secr_clist, \c_@@_auth_decl_sign_clist}
% 学位论文版权使用授权书填写项目：保密与签名。
%    \begin{macrocode}
\clist_const:Nn \c_@@_auth_decl_secr_clist
  {
    本论文属于,
    保\hspace{1em}密□，在\underline{\hspace{3em}}年解密后适用本授权书。,
    不保密□。,
    （请在以上方框内打“√”）
  }
\clist_const:Nn \c_@@_auth_decl_sign_clist
  {
    学位论文作者签名：,
    指导教师签名：,
    日期：\hspace{2em}年\hspace{1.5em}月\hspace{1.5em}日
  }
%    \end{macrocode}
% \end{variable}
%
% \subsection{摘要页常量}
% \begin{variable}{
%   \c_@@_name_abstract_zh_tl,
%   \c_@@_name_abstract_en_tl,
%   \c_@@_name_keywords_zh_tl,
%   \c_@@_name_keywords_en_tl,
%   \c_@@_sep_keywords_zh_tl,
%   \c_@@_sep_keywords_en_tl,
% }
%    \begin{macrocode}
\clist_map_inline:nn
  {
    { abstract } { Abstract } { 摘要 },
    { keywords } { Key~ words: } { 关键词： },
  }
  { \@@_define_name:nnn #1 }
\tl_const:Nn \c_@@_sep_keywords_zh_tl { ； }
\tl_const:Nn \c_@@_sep_keywords_en_tl { , }
%    \end{macrocode}
% \end{variable}
%
% \subsection{正文常量}
% \begin{variable}{\c_@@_header_tl}
% 页眉。
%    \begin{macrocode}
%<def-m>\tl_const:Nn \c_@@_header_tl { 华中科技大学硕士学位论文 }
%<def-d>\tl_const:Nn \c_@@_header_tl { 华中科技大学博士学位论文 }
%    \end{macrocode}
% \end{variable}
%
%    \begin{macrocode}
%</def-m|def-d>
%    \end{macrocode}

% \section{文献样式}
%
% \subsection{标注样式}
%
%    \begin{macrocode}
%<*cbx>
%    \end{macrocode}
%
% 临时占位测试。
%    \begin{macrocode}
\RequireCitationStyle{gb7714-2015}
%    \end{macrocode}
%
%    \begin{macrocode}
%</cbx>
%    \end{macrocode}
%
% \subsection{著录样式}
%
%    \begin{macrocode}
%<*bbx>
%    \end{macrocode}
%
% 临时占位测试。
%    \begin{macrocode}
\RequireBibliographyStyle{gb7714-2015}
%    \end{macrocode}
%
%    \begin{macrocode}
%</bbx>
%    \end{macrocode}
%
% \section{文档样式}

%    \begin{macrocode}
%<*doc-sty>
%<@@=hustdoc>
\RequirePackage { xcolor-material, zref-base }
%    \end{macrocode}
%
% \subsection{内部函数}
%
% \begin{macro}{\@@_patch_cmd:Nnn, \@@_preto_cmd:Nn, \@@_appto_cmd:Nn}
% 补丁工具。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_patch_cmd:Nnn #1#2#3
  {
    \ctex_patch_cmd_once:NnnnTF #1 { } {#2} {#3}
      { } { \ctex_patch_failure:N #1 }
  }
\cs_new_protected:Npn \@@_preto_cmd:Nn #1#2
  {
    \ctex_preto_cmd:NnnTF #1 { } {#2}
      { } { \ctex_patch_failure:N #1 }
  }
\cs_new_protected:Npn \@@_appto_cmd:Nn #1#2
  {
    \ctex_appto_cmd:NnnTF #1 { } {#2}
      { } { \ctex_patch_failure:N #1 }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{\cls{l3doc} 补丁}
%
%<@@=codedoc>
%
% \begin{macro}{\@@_typeset_functions:}
% 减少展开标记（用来表明中英文模板中的不同用法）前的空格。
%    \begin{macrocode}
\__hustdoc_patch_cmd:Nnn \@@_typeset_expandability:
  { & } { & \skip_horizontal:n { -0.5em } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_typeset_functions:, \@@_macro_init:,
%   \@@_macro_dump:}
% 左侧边注的函数列表采用单倍行距。
%    \begin{macrocode}
\__hustdoc_preto_cmd:Nn \@@_typeset_functions:
  { \MacroFont }
\__hustdoc_patch_cmd:Nnn \@@_macro_init:
  { \hbox:n } { \MacroFont \hbox:n }
\__hustdoc_patch_cmd:Nnn \@@_macro_dump:
  { \hbox_unpack_drop:N } { \MacroFont \hbox_unpack_drop:N }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_macro_typeset_one:nN}
% 在 \env{macro} 环境的侧边栏中，\cls{l3doc} 根据命令的长短，分别用
% 普通字体和紧缩字体输出。然而很长的命令还是会超出页边。这里用缩放
% 盒子的手段使得长命令也可正常显示。
%    \begin{macrocode}
\cs_set_protected:Npn \@@_macro_typeset_one:nN #1#2
  {
    \vbox_set:Nn \l_@@_macro_box
      {
        \MacroFont
        \vbox_unpack_drop:N \l_@@_macro_box
        \hbox_set:Nn \l_tmpa_box
          { \@@_print_macroname:nN {#1} #2 }
%    \end{macrocode}
% \tn{marginparwidth} 和 \tn{marginparsep} 分别是边注的宽度及其到版心的距离，
% \tn{la\-bel\-sep} 则是编号盒子右端与条目首行文本之间的距离。
%    \begin{macrocode}
        \dim_set:Nn \l_tmpa_dim
          { \marginparwidth - \labelsep - \marginparsep }
        \dim_compare:nNnT { \box_wd:N \l_tmpa_box } > \l_tmpa_dim
          {
            \box_resize_to_wd_and_ht:Nnn \l_tmpa_box
              { \l_tmpa_dim } { \box_ht:N \l_tmpa_box }
          }
        \hbox_overlap_left:n
          {
            \box_use:N \l_tmpa_box
            \skip_horizontal:n { \marginparsep - \labelsep }
          }
      }
    \int_incr:N \l_@@_macro_int
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{文档层命令}
%<@@=hustdoc>
%
% \begin{macro}[no-user-doc]{\key}
% 用于在文档中输出自定义索引的命令，主要用于键值对的键的索引。仅当索引项的父分类为 |option| 时，即用于文档类选项时，隐藏父分类。
%  \begin{arguments}
%    \item 在索引中显示项的父分类，默认为 \opt{option}。
%    \item 命令本体。
%  \end{arguments}
%    \begin{macrocode}
\DeclareDocumentCommand \key { O{option} m }
  {
    \tl_if_eq:nnTF { #1 } { option }
      { \cmd[module=#1]{#2} }
      { \cmd[module=#1]{#1/#2} }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[no-user-doc]{\opt}
% 输出键值对的值。
%    \begin{macrocode}
\DeclareDocumentCommand \opt { m }
  { \texttt{#1} }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\TeX, \LaTeX, \LaTeXe,
%   \pdfTeX, \pdfLaTeX, \XeTeX, \XeLaTeX, \LuaTeX, \LuaLaTeX,
%   \AmSLaTeX, \TeXLive, \MiKTeX, \BibTeX, \biber, \TikZ
% }
% \TeX{} 相关标志。
%    \begin{macrocode}
\def\TeX{\hologo{TeX}}
\def\LaTeX{\hologo{LaTeX}}
\def\LaTeXe{\hologo{LaTeXe}}
\def\pdfTeX{\hologo{pdfTeX}}
\def\pdfLaTeX{\hologo{pdfLaTeX}}
\def\XeTeX{\hologo{XeTeX}}
\def\XeLaTeX{\hologo{XeLaTeX}}
\def\LuaTeX{\hologo{LuaTeX}}
\def\LuaLaTeX{\hologo{LuaLaTeX}}
\def\AmSLaTeX{\hologo{AmSLaTeX}}
\def\TeXLive{\TeX\ Live}
\def\MiKTeX{\hologo{MiKTeX}}
\def\BibTeX{\hologo{BibTeX}}
\def\biber{\hologo{biber}}
%    \end{macrocode}
% 该定义来自 \file{pgfmanual-en-macros.tex}。
%    \begin{macrocode}
\def\TikZ{Ti\emph{k}Z}
%    \end{macrocode}
% \end{macro}
%
% \subsection{\env{macrocode}环境}
%
% \subsubsection{代码行处理}
%
% \begin{macro}[int]{\xmacro@code,\sxmacro@code}
% 重新实现 \env{macrocode} 与 \env{macrocode*} 环境的核心功能，将对代码逐行
% 处理。后者会将空格显示为“\verb*| |”。
%    \begin{macrocode}
\cs_set_protected_nopar:Npn \xmacro@code
  { \@@_marco_code:w }
\cs_set_protected_nopar:Npn \sxmacro@code
  {
    \fontspec_print_visible_spaces:
    \xmacro@code
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_marco_code:w}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_marco_code:w
  {
%    \end{macrocode}
% 根据 \tn{codeline@index} 是否为 |true| 选择是否显示行号。
%    \begin{macrocode}
    \ifcodeline@index
      \@@_marco_code_every_par:n { \@@_code_line_no: }
    \else:
      \@@_marco_code_every_par:n { }
    \fi:
%    \end{macrocode}
% 设置代码段结束标记为“\verb*|%    \end{macrocode}^^M|”。
%    \begin{macrocode}
    \@@_make_finish_tag:x { \@currenvir }
%    \end{macrocode}
% 开始 \env{macrocode}。
%    \begin{macrocode}
    \@@_macro_code_start:w
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_marco_code_every_par:n}
% 在每段之前插入内容。这里每段即相当于每行。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_marco_code_every_par:n #1
  {
    \everypar
      {
        \everypar {#1}
        \if@inlabel
          \global \@inlabelfalse \@noparlistfalse
          \llap { \box \@labels \hskip \leftskip }
        \fi
        #1
      }
  }
%    \end{macrocode}
% \end{macro}
%
% 设置 \tn{endlinechar} 为 $-1$，表示行末不插入任何字符（实际上相当于在行尾
% 插入注释符 |%|）。
%    \begin{macrocode}
\group_begin:
  \int_set:Nn \tex_endlinechar:D { -1 }
%    \end{macrocode}
%
% \begin{variable}{\c_@@_active_space_tl}
% 活动字符类的空格（ASCII 码为 32）。
%    \begin{macrocode}
  \use:n
    {
      \char_set_catcode_active:n { 32 }
      \tl_const:Nn \c_@@_active_space_tl
    }
    { }
\group_end:
%    \end{macrocode}
% \end{variable}
%
% ASCII 码 13 是回车符 |^^M|。将其设置为活动字符。
%    \begin{macrocode}
\group_begin:
  \char_set_catcode_active:n { 13 }
%    \end{macrocode}
%
% \begin{macro}{\@@_make_finish_tag:n,\@@_make_finish_tag:x}
% \env{macrocode} 结尾标记。展开后变成“\verb*|%    \end{#1}^^M|”。
%    \begin{macrocode}
  \cs_new_protected:Npx \@@_make_finish_tag:n #1
    {
      \tl_set:Nn \exp_not:N \l_@@_macro_code_finish_tl
        {
          \c_percent_str
          \prg_replicate:nn { 4 }
            { \exp_not:o { \c_@@_active_space_tl } }
          \exp_not:o { \active@escape@char } end
          \c_left_brace_str #1 \c_right_brace_str
          \exp_not:N ^^M
        }
    }
  \cs_generate_variant:Nn \@@_make_finish_tag:n { x }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_macro_code_start:w}
% 开始代码环境。此命令主要是为了防止 |\begin{macrocode}| 后出现多余的空行。
%    \begin{macrocode}
  \cs_new_protected:Npn \@@_macro_code_start:w #1
    {
      \str_if_eq:nnTF {#1} { ^^M }
        { \@@_macro_code_read_line:w }
        { \@@_macro_code_read_line:w #1 }
    }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_macro_code_read_line:w}
% 逐行读取代码，并连同行尾回车符一并存入 \cs{l_@@_macro_code_line_tl}。如果该行
% 与结束标记“\verb*|%    \end{macrocode}^^M|”相同，则结束此 \env{macrocode}；
% 否则继续处理该行代码。
%    \begin{macrocode}
  \cs_new_protected:Npn \@@_macro_code_read_line:w #1 ^^M
    {
      \tl_set:Nn \l_@@_macro_code_line_tl { #1 ^^M }
      \tl_if_eq:NNTF
        \l_@@_macro_code_line_tl \l_@@_macro_code_finish_tl
        { \exp_args:Nx \end { \@currenvir } }
        {
          \@@_macro_code_process_line:
          \@@_macro_code_read_line:w
        }
    }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_swap_cr:,\@@_swap_cr_aux:w}
% 把 \cs{l_@@_macro_code_line_tl} 中的回车符 |^^M| 挪到外面。
%    \begin{macrocode}
  \cs_new_protected:Npn \@@_swap_cr:
    {
      \exp_after:wN
        \@@_swap_cr_aux:w \l_@@_macro_code_line_tl
    }
  \cs_new_protected:Npn \@@_swap_cr_aux:w #1 ^^M
    {
      \group_insert_after:N ^^M
      \tl_set:Nn \l_@@_macro_code_line_tl {#1}
    }
%    \end{macrocode}
% \end{macro}
%
% \begin{variable}{\c_@@_active_cr_tl}
% 活动字符类的回车符。
%    \begin{macrocode}
  \tl_const:Nn \c_@@_active_cr_tl { ^^M }
\group_end:
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\l_@@_macro_code_line_tl,
%   \l_@@_macro_code_finish_tl,
%   \g_@@_macro_code_verbatim_stop_tl}
% 分别用来存储代码行、\env{macrocode} 结束标记以及抄录停止标记。
%    \begin{macrocode}
\tl_new:N \l_@@_macro_code_line_tl
\tl_new:N \l_@@_macro_code_finish_tl
\tl_new:N \g_@@_macro_code_verbatim_stop_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{\@@_process_normal_line:}
% 普通代码行根据开头字符分别处理。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_process_normal_line:
  {
    \str_case_e:nnF
      { \str_head:N \l_@@_macro_code_line_tl }
      {
%    \end{macrocode}
% 以 |%| 开头的行先由 \cs{tl_tail:N} 去掉 |%|，之后再检查 |<|。
%    \begin{macrocode}
        { \c_percent_str }
        {
          \@@_check_angle:x
            { \tl_tail:N \l_@@_macro_code_line_tl }
        }
%    \end{macrocode}
% 以 |#| 开头的行按注释的格式输出。
%    \begin{macrocode}
        { \c_hash_str }
        { \@@_output_comment_line: }
      }
%    \end{macrocode}
% 其余正常输出。
%    \begin{macrocode}
      { \@@_output_line: }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_process_verbatim_line:}
% 处理抄录代码行（不检查 |%| 与 |<|）。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_process_verbatim_line:
  {
%    \end{macrocode}
% 将该行与抄录停止标记进行比较。
%    \begin{macrocode}
    \tl_if_eq:NNTF \l_@@_macro_code_line_tl
        \g_@@_macro_code_verbatim_stop_tl
%    \end{macrocode}
% 若相同，则结束抄录环境，清空抄录停止标记，并输出该标记；
%    \begin{macrocode}
      {
        \tl_gclear:N \g_@@_macro_code_verbatim_stop_tl
        \cs_gset_eq:NN \@@_macro_code_process_line:
          \@@_process_normal_line:
        \@@_output_module:nn
          { \color { verb@guard } }
          {
            \@@_swap_cr:
            \@@_module_pop:n { \l_@@_macro_code_line_tl }
          }
      }
%    \end{macrocode}
% 否则直接输出抄录代码。
%    \begin{macrocode}
      { \tl_use:N \l_@@_macro_code_line_tl }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_macro_code_process_line:}
% 处理代码行。该命令的作用如下：
% \begin{itemize}
%   \item 正常情况下，等同于 \cs{@@_process_normal_line:}；
%   \item 在 \cs{DontCheckModules} 之后，等价于 \cs{@@_output_line:}，
%     即不检查模块标记，直接输出；
%   \item 在抄录环境中，等价于 \cs{@@_process_verbatim_line:}，
%     此时将不再特殊处理以 |%| 开头的代码行。
% \end{itemize}
%    \begin{macrocode}
\cs_new_eq:NN \@@_macro_code_process_line:
  \@@_process_normal_line:
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{模块标记处理}
%
% \begin{macro}[int]{\CheckModules, \DontCheckModules}
% 选择是否检查模块标记。这两个命令在 \pkg{doc} 宏包中已有定义，此处重新声明。
%    \begin{macrocode}
\DeclareDocumentCommand \CheckModules { }
  {
    \cs_set_eq:NN \@@_macro_code_process_line:
      \@@_process_normal_line:
  }
\DeclareDocumentCommand \DontCheckModules { }
  {
    \cs_set_eq:NN \@@_macro_code_process_line:
      \@@_output_line:
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_check_angle:n,\@@_check_angle:x}
% 检查第一个字符是否是 |<|。若是，则检查模块；否则立刻输出改行。
% 该函数的参数不带 |%|。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_check_angle:n #1
  {
    \str_if_eq:eeTF { \str_head:n {#1} } { < }
      { \@@_check_module:x { \tl_tail:n {#1} } }
      { \@@_output_comment_line: }
  }
\cs_generate_variant:Nn \@@_check_angle:n { x }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_check_module:n,\@@_check_module:x}
% 检查紧跟 |<| 之后的字符。共有四种情况：
% \begin{itemize}
%   \item |*|：模块开始（|%<*|\meta{module}|>|）；
%   \item |/|：模块结束（|%</|\meta{module}|>|）；
%   \item |@|：名字空间（|%<@@=|\meta{namespace}|>|）；
%   \item |<|：抄录环境开始（|%<<|\meta{end-tag}）。
% \end{itemize}
% 若不是这几种情况，则为单独一行的独立模块（|%<|\meta{module}|>|）。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_check_module:n #1
  {
    \str_case_e:nnF { \str_head:n {#1} }
      {
        { * } { \@@_module_star:w }
        { / } { \@@_module_slash:w }
        { @ } { \@@_module_at:w }
        { < } { \@@_module_verb:w }
      }
      { \@@_module_pm:w }
%    \end{macrocode}
% 参数 |#1| 将被上面几个 |:w| 型函数吃掉。
%    \begin{macrocode}
    #1 \q_stop
  }
\cs_generate_variant:Nn \@@_check_module:n { x }
%    \end{macrocode}
% \end{macro}
%
% 设置 |>| 为活动字符。
%    \begin{macrocode}
\group_begin:
  \char_set_catcode_active:N \>
%    \end{macrocode}
%
% \begin{macro}{\@@_module_star:w}
% 模块开始标记。
% \begin{arguments}
%   \item |*|\meta{module}
%   \item 之后的代码
% \end{arguments}
%    \begin{macrocode}
  \cs_new_protected:Npn \@@_module_star:w #1 > #2 \q_stop
    {
%    \end{macrocode}
% 临时变量 \cs{l_@@_tmpa_tl} 保存 |<*|\meta{module}|>| 之后的部分，即真实代码。
%    \begin{macrocode}
      \tl_set:Nn \l_@@_tmpa_tl {#2}
%    \end{macrocode}
% 判断该行是否为空（只含一个回车符 |^^M|）。
%    \begin{macrocode}
      \tl_if_eq:NNTF \l_@@_tmpa_tl \c_@@_active_cr_tl
%    \end{macrocode}
% 若是，则将 |<|\meta{module}|>| 放在行号的右侧；
%    \begin{macrocode}
        {
          \@@_output_module:nn
            { \@@_star_color: }
            {
              \@@_module_push:n
                { \@@_module_angle:n {#1} }
            }
        }
%    \end{macrocode}
% 否则放在左侧，并输出相应代码。
%    \begin{macrocode}
        {
          \@@_output_module_left:nn
            { \@@_star_color: }
            {
              \@@_module_push:n
                { \@@_module_angle:n {#1} }
            }
        }
      \@@_output_line:n {#2}
    }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_module_slash:w}
% 模块结束标记。结构与 \cs{@@_module_star:w} 相同。
% \begin{arguments}
%   \item |/|\meta{module}
%   \item 之后的代码
% \end{arguments}
%    \begin{macrocode}
  \cs_new_protected:Npn \@@_module_slash:w #1 > #2 \q_stop
    {
      \tl_set:Nn \l_@@_tmpa_tl {#2}
      \tl_if_eq:NNTF \l_@@_tmpa_tl \c_@@_active_cr_tl
        {
          \@@_output_module:nn
            { \@@_slash_color: }
            {
              \@@_module_pop:n
                { \@@_module_angle:n {#1} }
            }
        }
        {
          \@@_output_module_left:nn
            { \@@_slash_color: }
            {
              \@@_module_pop:n
                { \@@_module_angle:n {#1} }
            }
        }
      \@@_output_line:n {#2}
    }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_module_at:w}
% 名字空间。
% \begin{arguments}
%   \item 名字空间的名称（不含 |@@=|）
%   \item 之后的代码
% \end{arguments}
%    \begin{macrocode}
  \cs_new_protected:Npn \@@_module_at:w @ @ = #1 > #2 \q_stop
    {
      \@@_output_module:nn
        { \color { at@guard } }
        { \@@_module_angle:n { @ @ = #1 } }
%    \end{macrocode}
% 设置名字空间为 |#1|。\cls{l3doc} 中将名字空间称为“模块”（module），
% 注意不要混淆。
%    \begin{macrocode}
      \tl_gset:Nn \g__codedoc_module_name_tl {#1}
      \@@_output_line:n {#2}
    }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_module_verb:w}
% 抄录开始。|#1|: |<|\meta{end-tag}，只有一个 |<|。\meta{end-tag} 的最后会
% 带有一个回车符 |^^M|。
%    \begin{macrocode}
  \cs_new_protected:Npn \@@_module_verb:w #1 \q_stop
    {
%    \end{macrocode}
% 重定义 \cs{@@_macro_code_process_line:}，用以输出抄录行。
%    \begin{macrocode}
      \cs_gset_eq:NN \@@_macro_code_process_line:
        \@@_process_verbatim_line:
%    \end{macrocode}
% 设置抄录停止标记。用 \cs{tl_tail:n} 去掉开头的 |<|。
%    \begin{macrocode}
      \tl_gset:Nx \g_@@_macro_code_verbatim_stop_tl
        { \c_percent_str \tl_tail:n {#1} }
%    \end{macrocode}
% 输出 |%<<|\meta{end-tag}。
%    \begin{macrocode}
      \@@_output_module:nn
        { \color { verb@guard } }
        {
          \@@_swap_cr:
          \@@_module_push:n { \l_@@_macro_code_line_tl }
        }
    }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_module_pm:w}
% 处理单独一行的模块。|<|\meta{module}|>| 放在行号的左侧。
% \begin{arguments}
%   \item \meta{module}
%   \item 之后的代码
% \end{arguments}
%    \begin{macrocode}
  \cs_new_protected:Npn \@@_module_pm:w #1 > #2 \q_stop
    {
      \@@_output_module_left:nn
        { \@@_pm_color: }
        { \@@_module_angle:n {#1} }
      \@@_output_line:n {#2}
    }
\group_end:
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_output_line:n,\@@_output_line:}
% 输出代码行。参数将被存入 \cs{l_@@_macro_code_line_tl}，
% 再由不带参数的版本调用。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_output_line:n #1
  {
    \tl_set:Nn \l_@@_macro_code_line_tl {#1}
%    \end{macrocode}
% 若为空行（只含一个 |^^M|），则直接输出（换行）。
%    \begin{macrocode}
    \tl_if_eq:NNTF
      \l_@@_macro_code_line_tl \c_@@_active_cr_tl
      { \tl_use:N \l_@@_macro_code_line_tl }
      {
%    \end{macrocode}
% 检查开头是否为 |%|，据此分别处理。
%    \begin{macrocode}
        \str_if_eq:eeTF
          { \str_head:N \l_@@_macro_code_line_tl } { \c_percent_str }
          { \@@_output_comment_line: } { \@@_output_line: }
      }
  }
\cs_new_protected_nopar:Npn \@@_output_line:
  {
    \tex_noindent:D
%    \end{macrocode}
% 此处将把 |@@| 替换为相应的名字空间。
%    \begin{macrocode}
    \@@_replace_at_at:N \l_@@_macro_code_line_tl
    \tl_use:N \l_@@_macro_code_line_tl
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_output_comment_line:}
% 输出注释代码行。用灰色、斜体显示。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_output_comment_line:
  {
    \tex_noindent:D
    \group_begin:
      \__hustdoc_swap_cr:
      \color { code@gray } \slshape \@@_output_line:
    \group_end:
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_replace_at_at:N,
%   \@@_replace_at_at_aux:Nn,\@@_replace_at_at_aux:No}
% 把 |@@| 替换为相应的名字空间。其名称存放在全局变量
% \cs{g__codedoc_module_name_tl} 中。它为空时（|%<@@=>|），不做替换。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_replace_at_at:N #1
  {
    \tl_if_empty:NF \g__codedoc_module_name_tl
      { \@@_replace_at_at_aux:No #1 \g__codedoc_module_name_tl }
  }
\cs_new_protected:Npn \@@_replace_at_at_aux:Nn #1#2
  {
%    \end{macrocode}
% 以下代码分别对应两种名字空间的替换：
% \begin{itemize}
%   \item 内部变量：|\|\meta{type}|_@@_|\meta{name} $\to$
%     |\|\meta{type}|__|\meta{namespace}|_|\meta{name}；
%   \item 内部函数：|\@@_|\meta{name}” $\to$
%     |\__|\meta{namespace}|_|\meta{name}”）。
% \end{itemize}
%    \begin{macrocode}
    \tl_replace_all:Nnn #1 { _ @ @ } { _ _ #2 }
    \tl_replace_all:Nnn #1 { @ @ } { _ _ #2 }
  }
\cs_generate_variant:Nn \@@_replace_at_at_aux:Nn { No }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_module_push:n,
%   \@@_module_push_aux:nn,\@@_module_push_aux:on}
% 将模块名压入栈中。此处的栈主要用来处理模块名（包括抄录标记）之间的超链接。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_module_push:n
  { \@@_module_push_aux:on { \int_use:N \c@HD@hypercount } }
\cs_new_protected:Npn \@@_module_push_aux:nn #1
  {
    \seq_gpush:Nn \g_@@_module_dest_seq {#1}
    \hypersetup { hidelinks }
    \exp_args:Nx \hdclindex
      { \zref@extractdefault { HD.#1 } { guard@end } { 1 } } { }
  }
\cs_generate_variant:Nn \@@_module_push_aux:nn { on }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_module_pop:n,
%   \@@_module_pop_aux:nn,\@@_module_pop_aux:on}
% 将模块名释放出栈。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_module_pop:n
  {
    \seq_gpop:NNTF \g_@@_module_dest_seq \l_@@_tmpa_tl
      { \@@_module_pop_aux:on { \l_@@_tmpa_tl } }
      { \BOOM \use:n }
  }
\cs_new_protected:Npn \@@_module_pop_aux:nn #1
  {
    \zref@labelbylist { HD.#1 } { hustdoc }
    \hypersetup { hidelinks }
    \hdclindex {#1} { }
  }
\cs_generate_variant:Nn \@@_module_pop_aux:nn { on }
%    \end{macrocode}
% \end{macro}
%
% \begin{variable}{\g_@@_module_dest_seq}
% 存放模块名的序列（栈）。
%    \begin{macrocode}
\seq_new:N \g_@@_module_dest_seq
%    \end{macrocode}
% \end{variable}
%
% 处理行号超链接。使用 \pkg{zref} 宏包。
%    \begin{macrocode}
\zref@newlist { hustdoc }
\zref@newprop { guard@end } [ 1 ]
  { \int_eval:n { \c@HD@hypercount - 1 } }
\zref@addprop { hustdoc } { guard@end }
%    \end{macrocode}
%
% \subsubsection{格式处理}
%
% \begin{macro}[int]{\MacroFont}
% 代码部分的字体。
%    \begin{macrocode}
\cs_set_protected:Npn \MacroFont
  {
    \linespread { 1.05 }
    \small \ttfamily \mdseries \upshape
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_output_module:nn,\@@_output_module_left:nn}
% 输出模块名（分行内和行号左侧两种）。
% \begin{arguments}
%   \item 颜色等样式
%   \item 模块名
% \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Npn \@@_output_module:nn #1#2
  {
    \tex_noindent:D
    \group_begin:
      #1
      \footnotesize \normalfont \sffamily #2
    \group_end:
  }
\cs_new_protected:Npn \@@_output_module_left:nn #1#2
  {
    \tex_noindent:D
    \hbox_overlap_left:n
      {
        \@@_output_module:nn {#1} {#2}
        \skip_horizontal:n { \leftskip + \smallskipamount }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_star_color:,\@@_slash_color:,\@@_pm_color:}
% 选择模块标记的颜色。模块标记的颜色会根据嵌套层次而改变。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_star_color:
  {
    \seq_gpop:NNTF \g_@@_star_color_seq \current@color
      { \set@color }
      { \@@_select_color: }
    \seq_gpush:No \g_@@_slash_color_seq { \current@color }
  }
\cs_new_protected_nopar:Npn \@@_slash_color:
  {
    \seq_gpop:NNTF \g_@@_slash_color_seq \current@color
      {
        \set@color
        \seq_gpush:No \g_@@_star_color_seq { \current@color }
      }
% TODO: 需要报错：star 与 slash 没有匹配
      { \BOOM }
  }
\cs_new_protected_nopar:Npn \@@_pm_color:
  {
    \seq_get:NNTF \g_@@_star_color_seq \current@color
      { \set@color }
      {
        \@@_select_color:
        \seq_gpush:No \g_@@_star_color_seq { \current@color }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{variable}{\g_@@_star_color_seq,\g_@@_slash_color_seq}
% 存放模块标记颜色的序列。
%    \begin{macrocode}
\seq_new:N \g_@@_star_color_seq
\seq_new:N \g_@@_slash_color_seq
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{\@@_select_color:}
% \begin{macro}[int]{guard@series}
% 设置模块标记的色系。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_select_color:
  { \color { guard@series!!+ } }
\definecolorseries { guard@series }
  { cmyk } { last } { blue } { purple }
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% 设置色系的增量大小。可选参数 |3| 意味着基色（blue）与末色（purple）之间将被
% 等分为三份。该数字比嵌套最大深度小 1。
%    \begin{macrocode}
\resetcolorseries [ 3 ] { guard@series }
%    \end{macrocode}
%
% \begin{macro}[int]{verb@guard,at@guard,code@gray}
% 设置颜色。
%    \begin{macrocode}
\definecolor { verb@guard } { named } { MaterialLime600 }
\definecolor { at@guard } { named } { MaterialPink }
\definecolor { code@gray } { named } { MaterialGrey }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_module_angle:n}
% 输出“$\langle\cdots\rangle$”。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_module_angle:n #1
  { < #1 > }
%   { \textlangle #1 \textrangle }
%   { \ensuremath \langle #1 \ensuremath \rangle }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_code_line_no:}
% 行号。设置为阿拉伯数字。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_code_line_no:
  {
    \int_gincr:N \c@CodelineNo
    \hbox_overlap_left:n
      {
        \hbox_to_wd:nn
          { \MacroIndent }
          {
            \HD@target
            \tex_hss:D \@@_code_line_no_style:
            \theCodelineNo \enspace
          }
        \tex_kern:D \@totalleftmargin
      }
  }
\tl_set:Nn \theCodelineNo { \arabic { CodelineNo } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_code_line_no_style:}
% 行号格式。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_code_line_no_style:
  { \color { code@gray } \normalfont \sffamily \tiny }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\HD@SetMacroIndent}
% 设置代码缩进（行号一栏的宽度）。该命令会写进 |.aux| 辅助文件，
% 以便在二次编译时确定最大行号宽度。
%    \begin{macrocode}
\cs_set_protected:Npn \HD@SetMacroIndent #1
  {
    \group_begin:
      \settowidth \MacroIndent
        {
          \@@_code_line_no_style:
          \prg_replicate:nn { \tl_count:n {#1} } { 0 }
          \enspace
        }
      \dim_gset_eq:NN \MacroIndent \MacroIndent
    \group_end:
  }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%</doc-sty>
%    \end{macrocode}
%
% \end{implementation}
